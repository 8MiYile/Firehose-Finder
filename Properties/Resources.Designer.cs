//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FirehoseFinder.Properties {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("FirehoseFinder.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на О программе.
        /// </summary>
        internal static string about {
            get {
                return ResourceManager.GetString("about", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Программа подбора программеров(firehose) для устройств на базе процессоров от Qualcomm..
        /// </summary>
        internal static string about_deck {
            get {
                return ResourceManager.GetString("about_deck", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Путь установки программы.
        /// </summary>
        internal static string app_path {
            get {
                return ResourceManager.GetString("app_path", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на 1577249282:AAFIZncf-90YpwMk_I7ad_YNwh4tnr5FXHo.
        /// </summary>
        internal static string bot {
            get {
                return ResourceManager.GetString("bot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Директория для распаковки.
        /// </summary>
        internal static string button_dirrepack {
            get {
                return ResourceManager.GetString("button_dirrepack", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Путь к файлу прошивки.
        /// </summary>
        internal static string button_rampath {
            get {
                return ResourceManager.GetString("button_rampath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Скопировано в буфер.
        /// </summary>
        internal static string copy_clip {
            get {
                return ResourceManager.GetString("copy_clip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Количество bin файлов прошивки.
        /// </summary>
        internal static string count_bin {
            get {
                return ResourceManager.GetString("count_bin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Количество bin файлов внутри прошивки.
        /// </summary>
        internal static string count_inside_bin {
            get {
                return ResourceManager.GetString("count_inside_bin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Количество конфигурационных файлов внутри прошивки.
        /// </summary>
        internal static string count_inside_conf {
            get {
                return ResourceManager.GetString("count_inside_conf", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на контрольная сумма.
        /// </summary>
        internal static string crc {
            get {
                return ResourceManager.GetString("crc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на  секторов для .
        /// </summary>
        internal static string dump_select_disc {
            get {
                return ResourceManager.GetString("dump_select_disc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Вы можете выбрать не более .
        /// </summary>
        internal static string dump_select_sec {
            get {
                return ResourceManager.GetString("dump_select_sec", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Вы можете выбрать не более {0} секторов для Диск {1}.
        /// </summary>
        internal static string dump_select_sectors {
            get {
                return ResourceManager.GetString("dump_select_sectors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Icon, аналогичного (Значок).
        /// </summary>
        internal static System.Drawing.Icon fh {
            get {
                object obj = ResourceManager.GetObject("fh", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap Fh_Image {
            get {
                object obj = ResourceManager.GetObject("Fh_Image", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на файл.
        /// </summary>
        internal static string file {
            get {
                return ResourceManager.GetString("file", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Подписант прошивки.
        /// </summary>
        internal static string firmware_signer {
            get {
                return ResourceManager.GetString("firmware_signer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Версия прошивки.
        /// </summary>
        internal static string firmware_version {
            get {
                return ResourceManager.GetString("firmware_version", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на 			Краткий инструктаж.
        ///
        ///	Основной функционал приложения - поиск подходящего программера (programmer, firehose, пожарный шланг и т.п.) под определённое устройство.
        ///	Так как устройств и программеров много, то первым шагом и первой кнопкой является &quot;Опросить устройство с перезагрузкой в аварийный режим&quot;. Данная процедура необходима для получения идентификаторов устройства, по которым будет осуществляться подбор программера. Все идентификаторы, иногда, не получается получить одним запросом. Для этого есть во [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string Greeting {
            get {
                return ResourceManager.GetString("Greeting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на файлах.
        /// </summary>
        internal static string hex_files {
            get {
                return ResourceManager.GetString("hex_files", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на найдено.
        /// </summary>
        internal static string hex_found {
            get {
                return ResourceManager.GetString("hex_found", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на из.
        /// </summary>
        internal static string hex_from {
            get {
                return ResourceManager.GetString("hex_from", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на в.
        /// </summary>
        internal static string hex_in {
            get {
                return ResourceManager.GetString("hex_in", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на совпадений.
        /// </summary>
        internal static string hex_matches {
            get {
                return ResourceManager.GetString("hex_matches", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Осторожно, вы предпринимаете попытку остановить длительную процедуру поиска. Нажимая кнопку &quot;Ok&quot;, вы подтверждаете выполнение операции..
        /// </summary>
        internal static string hex_mess_stopoper {
            get {
                return ResourceManager.GetString("hex_mess_stopoper", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на не.
        /// </summary>
        internal static string hex_not {
            get {
                return ResourceManager.GetString("hex_not", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Текущий поиск отменён пользователем.
        /// </summary>
        internal static string hex_note_cancelsearch {
            get {
                return ResourceManager.GetString("hex_note_cancelsearch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Адрес скопирован в буфер обмена.
        /// </summary>
        internal static string hex_note_copyoffset {
            get {
                return ResourceManager.GetString("hex_note_copyoffset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Обработка запроса ....
        /// </summary>
        internal static string hex_note_process {
            get {
                return ResourceManager.GetString("hex_note_process", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на обработан.
        /// </summary>
        internal static string hex_processed {
            get {
                return ResourceManager.GetString("hex_processed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Внимание, остановка длительной операции!.
        /// </summary>
        internal static string hex_warn_stopoper {
            get {
                return ResourceManager.GetString("hex_warn_stopoper", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Пожалуйста, выберите наименование производителя из списка или введите, при отсутствии подходящего значения..
        /// </summary>
        internal static string message_body_need_fields {
            get {
                return ResourceManager.GetString("message_body_need_fields", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Для вступления в силу изменения выбранного языка требуется перезапуск приложения. Нажмите &quot;Ок&quot; для перезагрузки приложения сейчас или &quot;Отмена&quot; для вступления изменений в силу при следующем запуске..
        /// </summary>
        internal static string message_body_need_restart {
            get {
                return ResourceManager.GetString("message_body_need_restart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Пустые обязательные поля.
        /// </summary>
        internal static string message_title_need_fields {
            get {
                return ResourceManager.GetString("message_title_need_fields", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Требуется перезапуск приложения!.
        /// </summary>
        internal static string message_title_need_restart {
            get {
                return ResourceManager.GetString("message_title_need_restart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на адрес.
        /// </summary>
        internal static string offset {
            get {
                return ResourceManager.GetString("offset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Версия упаковщика.
        /// </summary>
        internal static string packer_version {
            get {
                return ResourceManager.GetString("packer_version", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Версия телефона.
        /// </summary>
        internal static string phone_version {
            get {
                return ResourceManager.GetString("phone_version", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Если в логе появляется ошибка о некорректном значении команды (HANDLE_PEEK_FAILURE), попробуйте изменить выбор архитектуры процессора для этого программера..
        /// </summary>
        internal static string pp_note {
            get {
                return ResourceManager.GetString("pp_note", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Параметры прошивки.
        /// </summary>
        internal static string repack_parsing_header {
            get {
                return ResourceManager.GetString("repack_parsing_header", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap russia_flags_flag_17058 {
            get {
                object obj = ResourceManager.GetObject("russia_flags_flag_17058", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на размер.
        /// </summary>
        internal static string size {
            get {
                return ResourceManager.GetString("size", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Начали распаковку ....
        /// </summary>
        internal static string started_unpacking {
            get {
                return ResourceManager.GetString("started_unpacking", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Декодируем ....
        /// </summary>
        internal static string status_decode {
            get {
                return ResourceManager.GetString("status_decode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Читаем ....
        /// </summary>
        internal static string status_read {
            get {
                return ResourceManager.GetString("status_read", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Заголовок прошивки считан успешно..
        /// </summary>
        internal static string status_repack_complete {
            get {
                return ResourceManager.GetString("status_repack_complete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Заголовок прошивки декодирован..
        /// </summary>
        internal static string status_repack_decoded {
            get {
                return ResourceManager.GetString("status_repack_decoded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Открыть папку в Проводнике.
        /// </summary>
        internal static string status_repack_open_folder {
            get {
                return ResourceManager.GetString("status_repack_open_folder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Парсинг шапки прошивки завершился удачно.
        /// </summary>
        internal static string status_repack_parsing_header_complite {
            get {
                return ResourceManager.GetString("status_repack_parsing_header_complite", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Парсинг шапки прошивки завершился неудачно.
        /// </summary>
        internal static string status_repack_parsing_header_failed {
            get {
                return ResourceManager.GetString("status_repack_parsing_header_failed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Выберите путь к прошивке и директорию для распаковки.
        /// </summary>
        internal static string status_repack_start {
            get {
                return ResourceManager.GetString("status_repack_start", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Данная прошивка не может быть распакована, так как состоит не из одного файла, либо некорректно декодирована!.
        /// </summary>
        internal static string status_repack_unpacked_failed {
            get {
                return ResourceManager.GetString("status_repack_unpacked_failed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Операция распаковки файлов прошивки прервана пользователем.
        /// </summary>
        internal static string status_repack_unpacking_cancel {
            get {
                return ResourceManager.GetString("status_repack_unpacking_cancel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Прошивка успешно распакована в указанную директорию.
        /// </summary>
        internal static string status_repack_unpacking_complite {
            get {
                return ResourceManager.GetString("status_repack_unpacking_complite", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Распаковка файлов прошивки выполнена на.
        /// </summary>
        internal static string status_repack_unpacking_complited {
            get {
                return ResourceManager.GetString("status_repack_unpacking_complited", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Для сброса нажмите кнопку и выберите &quot;Отмена&quot;.
        /// </summary>
        internal static string tip_cancel {
            get {
                return ResourceManager.GetString("tip_cancel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Система дешифровки - только DES. Количество знаков в ключе меньше 16 будет дополнено &apos;0&apos; в начале..
        /// </summary>
        internal static string tip_decode {
            get {
                return ResourceManager.GetString("tip_decode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Выберите из списка или введите вручную.
        /// </summary>
        internal static string tip_row {
            get {
                return ResourceManager.GetString("tip_row", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Подключите устройство и нажмите для получения идентификаторов.
        /// </summary>
        internal static string tt_find {
            get {
                return ResourceManager.GetString("tt_find", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap united_kingdom_flags_flag_17079 {
            get {
                object obj = ResourceManager.GetObject("united_kingdom_flags_flag_17079", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Что-то непонятное.
        /// </summary>
        internal static string unknown {
            get {
                return ResourceManager.GetString("unknown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Отображаем блок первых символов ....
        /// </summary>
        internal static string userstate_show_first {
            get {
                return ResourceManager.GetString("userstate_show_first", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Версия.
        /// </summary>
        internal static string version {
            get {
                return ResourceManager.GetString("version", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Текущий размер сектора.
        /// </summary>
        internal static string write_ss {
            get {
                return ResourceManager.GetString("write_ss", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на всего секторов.
        /// </summary>
        internal static string write_ts {
            get {
                return ResourceManager.GetString("write_ts", resourceCulture);
            }
        }
    }
}
